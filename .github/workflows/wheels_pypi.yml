name: build wheels and deploy

on:
  create:
    tags:
      - v*
      
jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
        # py: [cp36, cp37, cp38, cp39, cp310]
        py: [cp310]
    steps:
    - uses: actions/checkout@v2
      name: checkout repository

    - uses: actions/setup-python@v2
      name: install python
      with:
          python-version: '3.x'

    - name: install cibuildwheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel

    - name: setup macOS
      if: startsWith(matrix.os, 'macos')
      shell: bash
      run: |
        brew config
        brew install boost
        eval `brew shellenv`
        tee -a $GITHUB_ENV << END
        CFLAGS=${CFLAGS} -I${HOMEBREW_PREFIX}/include
        CXXFLAGS=${CXXFLAGS} -I${HOMEBREW_PREFIX}/include
        END

    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir dist
      env:
        # some builds fail due to numpy issue
        CIBW_SKIP: pp* 
        
    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: dist/

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        name: Upload sdist
        with:
          name: dist
          path: dist/*.tar.gz


  upload_pypi:
    name: Upload To PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        name: Download wheels and sdist
        with:
          name: dist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Publish to PyPI
        with:
          # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
          user: __token__
          # password: ${{ secrets.PYPI_API_TOKEN }}
          # verbose: true
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/    
